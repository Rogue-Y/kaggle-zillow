{
  "develop_mode": true,
  "force_process_data": false,
  "predict": true,
  "steps": [
   [
     {
       "module": "feature_eng",
       "method": "add_missing_column_boolean",
       "params": {
         "args": [],
         "kwargs": {}
       }
     },
     {
       "module": "feature_eng",
       "method": "add_missing_value_count",
       "params": {
         "args": [],
         "kwargs": {}
       }
     },
     {
       "module": "data_clean",
       "method": "drop_high_corr_columns",
       "params": {
         "args": [],
         "kwargs": {}
       },
       "active": false
     },
     {
       "module": "data_clean",
       "method": "drop_low_ratio_columns",
       "params": {
         "args": [],
         "kwargs": {}
       }
     },
     {
       "module": "feature_eng",
       "method": "add_features",
       "params": {
         "args": [],
         "kwargs": {}
       }
     },
     {
       "module": "data_clean",
       "method": "one_hot_encode_categorical_data",
       "params": {
         "args": [],
         "kwargs": {}
       },
       "active": false
     },
     {
       "module": "data_clean",
       "method": "encode_categorical_data",
       "params": {
         "args": [],
         "kwargs": {}
       },
       "active": true
     },
     {
       "module": "data_clean",
       "method": "clean_geo_data",
       "params": {
         "args": [],
         "kwargs": {"lat_bin_num": 10, "lon_bin_num": 10}
       },
       "active": false
     },
     {
       "module": "feature_eng",
       "method": "add_before_1900_column",
       "params": {
         "args": [],
         "kwargs": {}
       }
     },
     {
       "module": "feature_eng",
       "method": "add_bins",
       "params": {
         "args": [],
         "kwargs": {
           "column": "calculatedfinishedsquarefeet",
           "quantile": true,
           "bin_num": 4,
           "one_hot_encode": true
         }
       },
       "active": false
     },
     {
       "module": "feature_eng",
       "method": "add_bins",
       "params": {
         "args": [],
         "kwargs": {
           "column": "structuretaxvaluedollarcnt",
           "quantile": true,
           "bin_num": 4,
           "one_hot_encode": true
         }
       },
       "active": false
     },
     {
       "module": "feature_eng",
       "method": "add_bins",
       "params": {
         "args": [],
         "kwargs": {
           "column": "landtaxvaluedollarcnt",
           "quantile": true,
           "bin_num": 4,
           "one_hot_encode": true
         }
       },
       "active": false
     },
     {
       "module": "feature_eng",
       "method": "add_bins",
       "params": {
         "args": [],
         "kwargs": {
           "column": "lotsizesquarefeet",
           "quantile": true,
           "bin_num": 4,
           "one_hot_encode": true
         }
       },
       "active": false
     }
   ],
   [
     {
       "module": "data_clean",
       "method": "clean_boolean_data",
       "params": {
         "args": [],
         "kwargs": {}
       }
     },
     {
       "module": "data_clean",
       "method": "clean_strange_value",
       "params": {
         "args": [],
         "kwargs": {}
       }
     },
     {
       "module": "feature_eng",
       "method": "feature_crossing",
       "params": {
         "args": [],
         "kwargs": {"cross_list": [["yearbuilt_bin", "lon_bin"], ["taxamount_bin", "lon_bin"], ["taxamount_bin", "yearbuilt_bin"]]}
       },
       "active": false
     }
   ]
 ],
 "training_preprocess": [
   {
     "module": "data_clean",
     "method": "remove_outliers",
     "params": {
       "args": [],
       "kwargs": {"llimit": -0.4, "ulimit": 0.4}
     },
     "active": false
   }
 ],
 "models": [
   {
     "module": "models.Lightgbm",
     "model": "Lightgbm",
     "params": {},
     "evparams": {"transform_target": false, "model_name": "Lightgbm", "weight": 5},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "n_estimators": [30, 100, 300],
       "max_features": ["sqrt", "log2"],
       "min_samples_leaf": [100, 300, 1000]
     },
     "active": false
   },
   {
     "module": "lightgbm",
     "model": "LGBMRegressor",
     "params": {
       "seed": 42, "nthread": 4, "silent": true, "boosting_type": "gbdt",
       "objective": "regression_l2", "colsample_bytree": 0.7,
       "learning_rate": 0.03, "max_bin": 30, "min_child_samples": 500,
       "n_estimators": 30, "reg_lambda": 1, "subsample": 0.7,
       "subsample_freq": 30
     },
     "evparams": {"transform_target": false, "model_name": "Lightgbm", "weight": 5, "error_output": 1000},
     "active": true
   },
   {
     "module": "lightgbm",
     "model": "LGBMRegressor",
     "params": {"seed": 42, "nthread": 4, "silent": true, "boosting_type": "gbdt", "objective": "regression_l2"},
     "evparams": {"transform_target": false, "model_name": "Lightgbm", "weight": 1, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 3},
     "param_space": {
       "n_estimators": [10, 30],
       "max_bin": [30, 100],
       "learning_rate": [0.01, 0.03],
       "min_child_samples": [500, 1000],
       "reg_lambda": [0.5, 1],
       "colsample_bytree": [0.5, 0.7],
       "subsample": [0.5, 0.7],
       "subsample_freq": [30, 100]
     },
     "active": false
   },
   {
     "module": "sklearn.linear_model",
     "model": "Lasso",
     "params": {"alpha": 1, "fit_intercept": true, "normalize": true, "copy_X": true, "selection": "random", "random_state": 42},
     "evparams": {"transform_target": true, "model_name": "LassoRegression", "weight": 1},
     "active": false
   },
   {
     "module": "sklearn.linear_model",
     "model": "ElasticNet",
     "params": {"selection": "random", "random_state": 42},
     "evparams": {"transform_target": true, "model_name": "ElasticNet", "weight": 1, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "alpha": [3, 5, 10],
       "l1_ratio": [0.1, 0.5, 0.9],
       "normalize": [true, false],
       "max_iter": [3000, 5000]
     },
     "active": false
   },
   {
     "module": "sklearn.linear_model",
     "model": "HuberRegressor",
     "params": {},
     "evparams": {"transform_target": true, "model_name": "HuberRegressor", "weight": 1, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "epsilon": [1.1, 1.35],
       "alpha": [0.0003, 0.001, 0.003]
     },
     "active": false
   },
   {
     "module": "sklearn.linear_model",
     "model": "Lasso",
     "params": {"selection": "random", "random_state": 42},
     "evparams": {"transform_target": true, "model_name": "Lasso", "weight": 1, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "alpha": [3, 5, 10],
       "normalize": [true, false],
       "max_iter": [3000, 5000]
     },
     "active": false
   },
   {
     "module": "sklearn.linear_model",
     "model": "RandomizedLasso",
     "params": {"random_state": 42},
     "evparams": {"transform_target": true, "model_name": "RandomizedLasso", "weight": 1, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "alpha": ["aic", "bic"],
       "scaling": [0.2, 0.5, 0.8],
       "sample_fraction": [0.5, 0.75, 0.9],
       "n_resampling": [200, 300],
       "selection_threshold": [0.1, 0.25, 0.5],
       "normalize": [true, false]
     },
     "active": false
   },
   {
     "module": "sklearn.ensemble",
     "model": "AdaBoostRegressor",
     "params": {
       "random_state": 42
     },
     "evparams": {"transform_target": false, "model_name": "AdaBoostRegressor", "weight": 2, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "n_estimators": [50, 100, 300],
       "loss": ["linear", "square", "exponential"]
     },
     "active": false
   },
   {
     "module": "sklearn.ensemble",
     "model": "BaggingRegressor",
     "params": {
       "random_state": 42
     },
     "evparams": {"transform_target": false, "model_name": "BaggingRegressor", "weight": 2, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "n_estimators": [10, 30, 100],
       "max_samples": [0.5, 0.75, 1],
       "max_features": [0.5, 0.75, 1],
       "bootstrap_features": [true, false]
     },
     "active": false
   },
   {
     "module": "sklearn.ensemble",
     "model": "ExtraTreesRegressor",
     "params": {
       "criterion": "mae",
       "random_state": 42
     },
     "evparams": {"transform_target": false, "model_name": "BaggingRegressor", "weight": 2, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "n_estimators": [10, 30, 100],
       "max_features": ["sqrt", "log2"],
       "max_depth": [5, 10, 15],
       "min_samples_leaf": [300, 1000, 3000]
     },
     "active": false
   },
   {
     "module": "sklearn.ensemble",
     "model": "RandomForestRegressor",
     "params": {
       "random_state": 42
     },
     "evparams": {"transform_target": false, "model_name": "Random Forest", "weight": 2, "error_output": 1000},
     "grid_search": true,
     "grid_search_params": {"cv": 5},
     "param_space": {
       "n_estimators": [30, 100, 300],
       "max_features": ["sqrt", "log2"],
       "min_samples_leaf": [100, 300, 1000],
       "max_depth": [5, 10]
     },
     "active": false
   },
   {
     "module": "sklearn.ensemble",
     "model": "RandomForestRegressor",
     "params": {
       "random_state": 42,
       "n_estimators": 100,
       "max_features": "sqrt",
       "min_samples_leaf": 1000,
       "max_depth": 10
     },
     "evparams": {"transform_target": false, "model_name": "Random Forest", "weight": 2, "error_output": 1000},
     "active": true
   }
 ]
}
